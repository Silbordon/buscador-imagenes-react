{"version":3,"sources":["components/Error.jsx","components/Formulario.jsx","components/Imagen.jsx","components/ListadoImagenes.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Formulario","setBusqueda","useState","termino","setTermino","error","setError","onSubmit","e","preventDefault","trim","setTimeout","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ListadoImagenes","imagenes","map","id","App","busqueda","setImagenes","peticionVacia","setPeticionVacia","paginaActual","setPaginaActual","totalPaginas","setTotalPaginas","useEffect","a","imagenesPorPagina","url","fetch","respuesta","json","resultado","total","hits","calcularTotalPaginas","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","consultarApi","onClick","nuevaPaginaActual","nuevaPaginaSiguiente","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2529301e.chunk.js","sourcesContent":["\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <p className=\"my-3 p-4 text-center text-black alert alert-danger\">\r\n            {mensaje}\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Error;","import {useState} from 'react'\r\nimport Error from './Error';\r\n\r\n\r\nconst Formulario = ({setBusqueda}) => {\r\n\r\n    const [termino, setTermino] = useState('');\r\n    const [error, setError] = useState(false)\r\n\r\n    const buscarImagenes = (e) =>{\r\n        //prevenir el refresh\r\n        e.preventDefault();\r\n        //validar el form\r\n        if(termino.trim() === ''){\r\n            setError(true)\r\n            setTimeout(() =>{\r\n                setError(false)\r\n            }, 1500)\r\n            return;\r\n        }\r\n        // setError(false);\r\n       \r\n        //enviar la info al componente principal\r\n        setBusqueda(termino)\r\n        //limpiar formulario\r\n        setTermino('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={buscarImagenes}>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-md-8\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Busca una Imagen por ej. Cafe, Futbol, Sopa\"\r\n                        onChange={e => setTermino(e.target.value)}\r\n                        value={termino}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-lg btn-danger btn-block\"\r\n                        value=\"BUSCAR\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {error && <Error mensaje=\"Los campos son obligatorios\"/>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Formulario;","\r\nconst Imagen = ({imagen}) => {\r\n    const {largeImageURL, likes, previewURL, tags, views } = imagen\r\n    return (\r\n        <div className=\"col-12 col-ms-6 col-md-4 col-lg-3 \">\r\n            <div className=\"card mt-4\">\r\n                <img src={previewURL} alt={tags}  className=\"card-img-top imagen\" />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{likes} : Me Gusta ‚ù§</p>\r\n                    <p className=\"card-text\">{views} : Vistas</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <a  className=\"btn-primary btn-block\" href={largeImageURL} target=\"_blank\" rel=\"noreferrer\">Ver Imagen</a>   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Imagen;","import Imagen from './Imagen'\r\nimport Error from './Error';\r\n\r\nconst ListadoImagenes = ({imagenes}) => {\r\n\r\n    return (\r\n        <div className=\"col-12 p-5 row\">\r\n           \r\n            {imagenes.map(imagen => (\r\n                <Imagen \r\n                    key={imagen.id}\r\n                    imagen={imagen}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListadoImagenes;","import Formulario from './components/Formulario'\nimport ListadoImagenes from './components/ListadoImagenes';\nimport {useState, useEffect} from 'react'\nimport Error from './components/Error';\n\nfunction App() {\n\nconst [busqueda, setBusqueda] = useState('');\nconst [imagenes, setImagenes] = useState([]);\nconst [peticionVacia, setPeticionVacia] = useState(false);\nconst [paginaActual, setPaginaActual] = useState(1);\nconst [totalPaginas, setTotalPaginas] = useState(1);\n\n\nuseEffect(() =>{\n  setPaginaActual(1)\n}, [busqueda])\n\n\nuseEffect(() =>{\n  const consultarApi = async() =>{\n  \n    if(busqueda === '')return\n     \n     const imagenesPorPagina = 30;\n     const key = '22226360-5d60834bda32ce715b6d29956' ;\n     const url = `https://pixabay.com/api/?key=${key}&q=${busqueda}&per-page=${imagenesPorPagina}&page=${paginaActual}`\n\n     const respuesta = await fetch(url);\n     const resultado = await respuesta.json();\n     \n     if(resultado.total === 0 ){\n      setPeticionVacia(true)\n      return;\n     }\n     setPeticionVacia(false)\n     setImagenes (resultado.hits)\n\n\n     //calculo del total de paginas \n     const calcularTotalPaginas = Math.ceil(resultado.totalHits / imagenesPorPagina)\n     setTotalPaginas(calcularTotalPaginas)\n\n     //mover la pantalla hasta arriba luego de usar el paginador\n     const jumbotron = document.querySelector('.jumbotron')\n     jumbotron.scrollIntoView({behavior: 'smooth'})\n     \n     \n  }\n  \n  consultarApi()\n}, [busqueda, paginaActual])\n\n//ir a la pag anterior\nconst paginaAnterior =( ) =>{\n  const nuevaPaginaActual = paginaActual - 1\n  if(nuevaPaginaActual === 0)return;\n  setPaginaActual(nuevaPaginaActual)\n}\n\n\n//ir a la pag siguiente\nconst paginaSiguiente =( ) =>{\n  const nuevaPaginaSiguiente = paginaActual +1\n  if(nuevaPaginaSiguiente > totalPaginas)return;\n  setPaginaActual(nuevaPaginaSiguiente)\n}\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <p className=\"lead text-center\">Buscador de Imagenes</p>\n        <Formulario \n          setBusqueda={setBusqueda}\n        />\n      </div>\n      <div className=\"row justify-content-center\">\n      {peticionVacia && <Error mensaje=\"No hay coincidencias\" />}\n        <ListadoImagenes \n          imagenes = {imagenes}\n        />\n        {(paginaActual === 1) ? null : (\n        <button className=\"bbtn btn-info mr-1\" type=\"button\" onClick={paginaAnterior}>\n          &laquo; Anterior \n        </button>\n        )}\n        \n        {(paginaActual !== totalPaginas) && (\n\n        <button className=\"bbtn btn-info mr-1\" type=\"button\" onClick={paginaSiguiente}>\n         Siguiente &raquo;\n        </button>\n        )}\n      </div>\n    </div> \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}